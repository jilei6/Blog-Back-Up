title: Dockers 是个什么鬼？
author: Jaren
date: 2017-08-23 18:18:07
tags:
---
> 最近因为通过hexo搭建了一个简易的个人静态博客，因为嫌弃hexo部署冗杂的步骤，所以研究了一些自动化部署的机制，其中就了解到了Docker,粗略的研究了下后，想跟大家一起分享下个人的一些心得理解
<!-- more -->

###### **一、官方简介**
- Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖 > 包到一个可-移植的容器中，然后发布到任何流行的Linux机器上，也可以实现> 虚拟化，容器是完全使用沙-箱机制，相互之间不会有任何接口。

看完这个介绍，我反而是有了很多的疑惑和不解，比如说，什么是应用容器，什么是虚拟化，相互之间不会有任何接口是什么意思？下面一起来仔细研究下Dockers到底是个什么鬼

###### **二、应用容器**
   其实从字面上理解的话，应用容器应该就是装载一些Application（应用）的一个容器吧，那这个容器应该长什么样子呢？其实大家可以先自行想象一下手机里面的APP是不是就是运行在各样的系统之中呢，所以，先暂时可以把容器理解成手机的样子。举个简单的例子，客户端开发一般调试离不开模拟器，iOS的模拟器可以说相当的强大，除了不能打电话，其他的基本上都和真机差不多了，那么在电脑中要跑一个类似于手机的东东，就需要配置和手机类似的的运行环境，而模拟器就相当于这个容器，你运行的时候，可以不必要自己去开一个虚拟机，部署一个iOS的运行环境了，可以然你专注于测试你的代码，这就是容器的最大的作用无需硬件，操作系统，运行环境等，只需要运行起来这个容器就好了，当然，容器的好处远远不止这些，比如更仿真的模拟线上环境进行测试，自动化部署机制，有着较高的隔离性和安全性，极大的节省资源等等好处，所以由此来看，容器的作用和好处还是蛮大的，其实说白了，Dockers就是一个轻量级的虚拟机而已。
   
###### **三、Docker的基本架构**

Docker 的核心组件包括:  
    - docker 客户端 - Client  
    - Docker 服务器 - Docker daemon  
    - Docker 镜像 - Image  
    - Registry 仓库  
    - Docker 容器 - Container  
    
 Docker 架构如下图所示：
  ![docker工作架构图-_-!](/assets/blogImg/dockerwork.jpg) 
  
  Docker 采用的是 Client/Server 架构。客户端向服务器发送请求，服务器负责构建、运行和分发容器。客户端和服务器可以运行在同一个 Host 上，客户端也可以通过 socket 或 REST API 与远程的服务器通信。

**Docker 客户端** 

最常用的 Docker 客户端是 docker 命令。通过 docker 我们可以方便地在 Host 上构建和运行容器。docker 支持很多操作（子命令）。除了 docker 命令行工具，用户也可以通过 REST API 与服务器通信。
   
**Docker 服务器**
  
Docker daemon 是服务器组件，以 Linux 后台服务的方式运行。 Docker daemon 运行在 Docker host 上，负责创建、运行、监控容器，构建、存储镜像。 
  
**Docker 镜像**  
  
可将 Docker 镜像看着只读模板，通过它可以创建 Docker 容器。
例如某个镜像可能包含一个 Ubuntu 操作系统、一个 Apache HTTP Server 以及用户开发的 Web 应用。镜像有多种生成方法：

1.可以从无到有开始创建镜像  
2.也可以下载并使用别人创建好的现成的镜像  
3.还可以在现有镜像上创建新的镜像  
我们可以将镜像的内容和创建步骤描述在一个文本文件中，这个文件被称作 Dockerfile，通过执行 docker build <docker-file> 命令可以构建出 Docker 镜像  
**Docker 容器**  
Docker 容器就是 Docker 镜像的运行实例。

用户可以通过 CLI（docker）或是 API 启动、停止、移动或删除容器。可以这么认为，对于应用软件，镜像是软件生命周期的构建和打包阶段，而容器则是启动和运行阶段。 
**Docker Registry**  

Registry 是存放 Docker 镜像的仓库，Registry 分私有和公有两种。 
DockerHub（https://hub.docker.com/） 是默认的 Registry，由 Docker 公司维护，上面有数以万计的镜像，用户可以自由下载和使用。 
出于对速度或安全的考虑，用户也可以创建自己的私有 Registry。后面我们会学习如何搭建私有 Registry。 
docker pull 命令可以从 Registry 下载镜像。
docker run 命令则是先下载镜像（如果本地没有），然后再启动容器。      
看完上面的内容基本还是对Docker有了一个比较基础的认识，关于docker的安装，docker命令的使用,docker的设计原理等。

下一篇我们使用docker实现hexo博客的自动化部署实例
      

    
    
    
    
    
    
    
    
    
    